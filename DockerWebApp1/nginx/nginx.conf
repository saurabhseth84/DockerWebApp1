user nginx;

worker_processes auto;

events 
{ 
worker_connections 1024; 
}

http {
    log_format upstream_time '$remote_addr $http_x_forwarded_for - $remote_user [$time_local] '
                             '$ssl_protocol "$request" $status $body_bytes_sent '
                             '"$http_referer" "$http_user_agent"'
                             'rt=$request_time uct="$upstream_connect_time" uht="$upstream_header_time" urt="$upstream_response_time"';
    access_log /var/log/nginx/access.log upstream_time;

    include         /etc/nginx/proxy.conf;
    include         /etc/nginx/mime.types;
    limit_req_zone  $binary_remote_addr zone=one:10m rate=5r/s;
    server_tokens   off;

    sendfile on;
    keepalive_timeout   29; # Adjust to the lowest possible value that makes sense for your use case.
    client_body_timeout 10; client_header_timeout 10; send_timeout 10;

    upstream webapp {
        server app:8080;
    }

    server {
        listen     *:8081 default_server;
		server_name     $hostname;
		location /{
		proxy_pass  http://webapp;
		limit_req   zone=one burst=10 nodelay;
		}
        #add_header Strict-Transport-Security max-age=15768000;
        #return     301 https://$host$request_uri;
    }